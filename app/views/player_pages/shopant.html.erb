<script src="/assets/jquery.min.js"></script>
<script src="/assets/rangeslider.min.js"></script>
<%= stylesheet_link_tag "rangeslider.css" %>
<style>
html,
body {
font-family: Century Gothic,CenturyGothic,AppleGothic,sans-serif;
color: #404040;
height: 100%;
margin: 0;
}

body {
padding: 0 20px;
color: #716894;
}

.main {
width: 400px;
margin: auto;
position: absolute;
}

label {
display: block;
margin-bottom: 2.5em;
font-size: 13px;
font-weight: bold;
}

.rangeslider__tooltip {
display: block;
margin-top: 2.5em;
font-size: 12px;
color: #a59eb5;
}

.rangeslider,
input[type='range'] {
max-width: 400px;
}

.rangeslider__handle {
border-radius: 22px;
line-height: 42px;
text-align: center;
font-weight: bold;
}
.rangeslider__handle:after {
  background: 0;
}

.rangeslider,
.rangeslider__fill {
display: block;
border-radius: 10px;
}

.rangeslider {
background: #e6e5ea;
  background-image:
  linear-gradient(
    to right,
    #4bc67d 30%, #f1c40f 45%, #b94a48 99%
);
position: relative;
}

.rangeslider--horizontal {
height: 23px;
width: 100%;
}

.rangeslider--vertical {
width: 20px;
min-height: 150px;
max-height: 100%;
}

.rangeslider--disabled {
filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=40);
opacity: 0.4;
}

.rangeslider__fill {
//background: #4bc67d;
position: absolute;
}
.rangeslider--horizontal .rangeslider__fill {
top: 0;
height: 100%;
}
.rangeslider--vertical .rangeslider__fill {
bottom: 0;
width: 100%;
}

.rangeslider__handle {
background: white;
border: 6px solid #4bc67d;
font-size: 20px;
cursor: pointer;
display: inline-block;
width: 50px;
height: 50px;
position: absolute;
-moz-border-radius: 50%;
-webkit-border-radius: 50%;
border-radius: 50%;
}
.rangeslider__handle.js-low {
  border-color: #4bc67d;
}

.rangeslider__handle.js-med {
  border-color: #f1c40f;
}

.rangeslider__handle.js-high {
  border-color: #b94a48;
}


.rangeslider__handle:after {
content: "";
display: block;
width: 18px;
height: 18px;
margin: auto;
position: absolute;
top: 0;
right: 0;
bottom: 0;
left: 0;
-moz-border-radius: 50%;
-webkit-border-radius: 50%;
border-radius: 50%;
}
.rangeslider__handle:active {

}
.rangeslider--horizontal .rangeslider__handle {
top: -20px;
touch-action: pan-y;
-ms-touch-action: pan-y;
}
.rangeslider--vertical .rangeslider__handle {
left: -10px;
touch-action: pan-x;
-ms-touch-action: pan-x;
}

input[type="range"]:focus + .rangeslider .rangeslider__handle {
-moz-box-shadow: 0 0 8px rgba(255, 0, 255, 0.9);
-webkit-box-shadow: 0 0 8px rgba(255, 0, 255, 0.9);
box-shadow: 0 0 8px rgba(255, 0, 255, 0.9);
}

</style>
<!--
  rangeslider.js
  https://github.com/andreruffert/rangeslider.js
  by AndrÃ© Ruffert - @andreruffert
-->
<div class="main">
  <p id="extraPoints"><%=@extra_points%></p>

<%
z = 0
for i in @items%>

<!--<p><%=i[0]%></p> <input id= <%= i[0]%> type = "number" value=<%=i[1]%>>-->
<div id=<%= z%>>
  <% z+=1%>
  <label for="panel_size"><%=i[0]%></label>
  <input
      type="range"
      name="participants"
      min="0"
      max="100"
      value="<%=i[1]%>"
  >
  <span class="rangeslider__tooltip" id ="range-tooltip"></span>
</div>
<br>
<br>

<%end%>
<button type="button" onclick="buy()">Finish</button> <br> <br>
</div>

<%
z = 0
for i in @items%>
  <div id=<%= z%> style="height:10px; width: 27px">
    <%for j in 0..8%>
      <div id= "<%= z %>,<%=j%>"style= "width:3px; height:100%;border: 10px solid;" ></div>
    <%end%>
  </div>
<% z+=1%>
<%end%>

<script>
var skills = <%=raw @items.to_json%>
var extraPoints = <%= @extra_points %>
function range(start, end){
  var j
  var ran=[]
  for(j=start;j<=end; j++){
    ran[j-start]=j
  }
  return ran
}
function refresh(){
  console.log("mouse up")
  var event = document.createEvent('Event')
  event.initEvent('input', true, true)
  event.initEvent('change', true, true)
  this.dispatchEvent(event)
}
const $elements = $('input[type="range"]');

const $tooltip = $('.rangeslider__tooltip');
const sliderStates = [
  {name: "low", tooltip: "Great, we're confident we can complete your project within <strong>24 hours</strong> of launch.", range: range(0, 25) },
  {name: "med", tooltip: "Looks good! We can complete a project of this size within <strong>48 hours</strong> of launch.", range: range(26, 49)},
  {name: "high", tooltip: "With a project of this size we'd like to talk with you before setting a completion timeline.", range: [50] },
];
var currentState;
var $handle;
var i
for (i = 0; i < $elements.length; i++){
  $element = $elements[i]
  $elements
    .rangeslider({
      polyfill: false,
      onInit: function() {
        //var j
        //for (j = 0; j < this.childNodes.length; j++){
          //if (this.childNodes[j].className == '.rangeslider__handle'){
            //$handle = this.childNodes[j];
          //}

        $handle = null
        $handle = $('.rangeslider__handle', this.$range);
        updateHandle($handle, this.value);
        $tool = $('.rangeslider__tooltip', this.parentElement);
        updateState($handle, this.value, $tool);
      }
    })
    .on('input', function() {
      $handle = null
      $handle = $('.rangeslider__handle', this.parentElement);

      updateHandle($handle, this.value);
      $tool = $('.rangeslider__tooltip', this.parentElement);
      checkState($handle, this.value, $tool);

    })
    .on('change', function(){
      if (parseInt(this.value) < skills[this.parentElement.id][1]){
        this.value = String(skills[this.parentElement.id][1])

        var event = document.createEvent('Event')
        event.initEvent('input', true, true)
        //event.initEvent('change', true, true)
        this.dispatchEvent(event)
        return

      }
      if (parseInt(this.value)-skills[this.parentElement.id][2]>extraPoints){
        this.value = String(skills[this.parentElement.id][2]+extraPoints)

        var event = document.createEvent('Event')
        event.initEvent('input', true, true)
        //event.initEvent('change', true, true)
        this.dispatchEvent(event)
        return
      }
      extraPoints -= parseInt(this.value)-skills[this.parentElement.id][2]
      $('#extraPoints').html(extraPoints)
      skills[this.parentElement.id][2] = parseInt(this.value)
    });
}

// Update the value inside the slider handle
function updateHandle(el, val) {
  //console.log(val)
  el.text(val);

  //console.log(el.textContent)

}

// Check if the slider state has changed
function checkState(el, val, tool) {
  // if the value does not fall in the range of the current state, update that shit.
  if (!currentState ||!currentState.range.includes(parseInt(val))) {

    updateState(el, val, tool);
  }
}

// Change the state of the slider
function updateState(el, val, tool) {
  for (var j = 0; j < sliderStates.length; j++){
    if (!currentState ||!currentState.range.includes(parseInt(val))) {
      currentState = sliderStates[j];
      // updateSlider();
    }
  }
  // If the state is high, update the handle count to read 50+
  if (currentState.name == "high") {
    //console.log("hi")
    updateHandle(el, "50+");
  }
  // Update handle color

  el
    .removeClass (function (index, css) {
    return (css.match (/(^|\s)js-\S+/g) ||   []).join(' ');
  })
    .addClass("js-" + currentState.name);
  // Update tooltip
  tool.html(currentState.tooltip);
}

function buy(){

  var data = {
    <%
    z = 0
    for i in @items%>
      "<%= raw i[0]%>Points": skills[<%=z%>][2]- skills[<%=z%>][1],
      <%z+=1%>
    <%end%>
  }
  //console.log(data)
  create_post(data,"/add_points")
}

function create_post(data, path){
  data.authenticity_token= window._token
  console.log("creating form")
  form = document.createElement("form")
  form.method = 'post'
  form.action = path
  for (key in data){
    element = document.createElement("input")
    element.type = 'hidden'
    element.name = key
    element.value = data[key]
    form.appendChild(element)
  }
  document.body.appendChild(form)
  form.submit()
  //console.log("khj")
}
</script>
